{"ast":null,"code":"var _class;\nimport { throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ConversorService {\n  constructor(http) {\n    this.http = http;\n    this.BASE_URL = \"https://economia.awesomeapi.com.br/last/USD-BRL,EUR-BRL\";\n  }\n  converter(conversao) {\n    let params = `?base=${conversao.moedaDe}&symbols=${conversao.moedaPara}`;\n    return this.http.get(this.BASE_URL).pipe(map(response => response), catchError(error => throwError(error)));\n  }\n  cotacaoPara(conversaoResponse, conversao) {\n    if (conversaoResponse === undefined) {\n      return 0;\n    }\n    return conversaoResponse.rates[conversao.moedaPara];\n  }\n  cotacaoDe(conversaoResponse, conversao) {\n    if (conversaoResponse === undefined) {\n      return '0';\n    }\n    return (1 / conversaoResponse.rates[conversao.moedaDe]).toFixed(4);\n  }\n  dataCotacao(conversaoResponse) {\n    if (conversaoResponse === undefined) {\n      return '';\n    }\n    return conversaoResponse.date;\n  }\n}\n_class = ConversorService;\n_class.ɵfac = function ConversorService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["throwError","catchError","map","ConversorService","constructor","http","BASE_URL","converter","conversao","params","moedaDe","moedaPara","get","pipe","response","error","cotacaoPara","conversaoResponse","undefined","rates","cotacaoDe","toFixed","dataCotacao","date","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\acebe\\Documents\\Git\\angular13\\projeto-final\\src\\app\\conversor\\services\\conversor.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\n\r\nimport {\r\n  Conversao,ConversaoResponse\r\n}from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConversorService {\r\n  private readonly BASE_URL = \"https://economia.awesomeapi.com.br/last/USD-BRL,EUR-BRL\";\r\n\r\n  constructor(\r\n    private http:HttpClient\r\n    ) { }\r\n\r\n  converter(conversao: Conversao): Observable<ConversaoResponse>{\r\n    let params = `?base=${conversao.moedaDe}&symbols=${conversao.moedaPara}`\r\n\r\n\r\n    return this.http.get(this.BASE_URL).pipe(\r\n      map((response: any) => response as ConversaoResponse),\r\n      catchError((error: any) => throwError(error))\r\n    );\r\n\r\n  }\r\n\r\n  cotacaoPara(conversaoResponse: ConversaoResponse, conversao: Conversao): number{\r\n    if(conversaoResponse === undefined){\r\n      return 0;\r\n    }\r\n\r\n    return conversaoResponse.rates[conversao.moedaPara];\r\n  }\r\n\r\n  cotacaoDe(conversaoResponse: ConversaoResponse, conversao: Conversao): string{\r\n    if(conversaoResponse === undefined){\r\n      return '0';\r\n    }\r\n\r\n    return (1/ conversaoResponse.rates[conversao.moedaDe]).toFixed(4);\r\n  }\r\n\r\n  dataCotacao( conversaoResponse: ConversaoResponse): string{\r\n    if(conversaoResponse === undefined){\r\n      return '';\r\n    }\r\n    return conversaoResponse.date;\r\n  }\r\n}\r\n"],"mappings":";AAEA,SAAqBA,UAAU,QAAQ,MAAM;AAC7C,SAASC,UAAU,EAAEC,GAAG,QAAQ,gBAAgB;;;AAShD,OAAM,MAAOC,gBAAgB;EAG3BC,YACUC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAHG,KAAAC,QAAQ,GAAG,yDAAyD;EAI/E;EAENC,SAASA,CAACC,SAAoB;IAC5B,IAAIC,MAAM,GAAG,SAASD,SAAS,CAACE,OAAO,YAAYF,SAAS,CAACG,SAAS,EAAE;IAGxE,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAC,IAAI,CAACN,QAAQ,CAAC,CAACO,IAAI,CACtCX,GAAG,CAAEY,QAAa,IAAKA,QAA6B,CAAC,EACrDb,UAAU,CAAEc,KAAU,IAAKf,UAAU,CAACe,KAAK,CAAC,CAAC,CAC9C;EAEH;EAEAC,WAAWA,CAACC,iBAAoC,EAAET,SAAoB;IACpE,IAAGS,iBAAiB,KAAKC,SAAS,EAAC;MACjC,OAAO,CAAC;;IAGV,OAAOD,iBAAiB,CAACE,KAAK,CAACX,SAAS,CAACG,SAAS,CAAC;EACrD;EAEAS,SAASA,CAACH,iBAAoC,EAAET,SAAoB;IAClE,IAAGS,iBAAiB,KAAKC,SAAS,EAAC;MACjC,OAAO,GAAG;;IAGZ,OAAO,CAAC,CAAC,GAAED,iBAAiB,CAACE,KAAK,CAACX,SAAS,CAACE,OAAO,CAAC,EAAEW,OAAO,CAAC,CAAC,CAAC;EACnE;EAEAC,WAAWA,CAAEL,iBAAoC;IAC/C,IAAGA,iBAAiB,KAAKC,SAAS,EAAC;MACjC,OAAO,EAAE;;IAEX,OAAOD,iBAAiB,CAACM,IAAI;EAC/B;;SAvCWpB,gBAAgB;;mBAAhBA,MAAgB,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAhBxB,MAAgB;EAAAyB,OAAA,EAAhBzB,MAAgB,CAAA0B,IAAA;EAAAC,UAAA,EAFf;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}