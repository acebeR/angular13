{"ast":null,"code":"var _class;\nimport { Tarefa } from '../shared';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = [\"formTarefa\"];\nfunction CadastrarTarefaComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"div\", 19);\n    i0.ɵɵtext(2, \" Digite a Tarefa. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 19);\n    i0.ɵɵtext(4, \" A tarefa deve conter ao menos 5 caracteres. \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r1 = i0.ɵɵreference(14);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hidden\", !_r1.errors[\"required\"]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"hidden\", !_r1.errors[\"minlength\"]);\n  }\n}\nconst _c1 = function () {\n  return [\"/tarefas\"];\n};\nexport class CadastrarTarefaComponent {\n  constructor(tarefaService, router) {\n    this.tarefaService = tarefaService;\n    this.router = router;\n    this.tarefa = new Tarefa();\n  }\n  ngOnInit() {}\n  cadastrar() {\n    if (this.formTarefa.form.valid) {\n      console.log(\"entrou aqui\");\n      this.tarefaService.cadastrar(this.tarefa);\n      this.router.navigate([\"/tarefas\"]);\n    }\n  }\n}\n_class = CadastrarTarefaComponent;\n_class.ɵfac = function CadastrarTarefaComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.TarefaService), i0.ɵɵdirectiveInject(i2.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-cadastrar-tarefa\"]],\n  viewQuery: function CadastrarTarefaComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.formTarefa = _t.first);\n    }\n  },\n  decls: 24,\n  vars: 5,\n  consts: [[\"href\", \"//netdna.bootstrapcdn.com/bootstrap/3.1.0/css/bootstrap.min.css\", \"rel\", \"stylesheet\", \"id\", \"bootstrap-css\"], [1, \"container\"], [1, \"row\"], [1, \"col-md-9\", 2, \"margin-left\", \"30px\"], [\"formTarefa\", \"ngForm\"], [1, \"col-md-4\"], [1, \"panel\", \"panel-info\"], [1, \"panel-body\", \"text-center\"], [1, \"\"], [\"type\", \"text\", \"id\", \"nome\", \"name\", \"nome\", \"minlength\", \"5\", \"required\", \"\", 1, \"col-md-12\", 2, \"height\", \"200px\", \"text-align\", \"justify\", 3, \"ngModel\", \"ngModelChange\"], [\"nome\", \"ngModel\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"list-group\", \"list-group-flush\", \"text-center\"], [1, \"list-group-item\"], [1, \"icon-ok\", \"text-danger\"], [\"type\", \"submit\", \"value\", \"Cadastrar\", 1, \"btn\", \"btn-success\", 3, \"disabled\", \"click\"], [1, \"btn\", \"btn-defoult\", 3, \"routerLink\"], [\"aria-hidden\", \"true\", 1, \"glyphicon\", \"glyphicon-chevron-left\"], [1, \"alert\", \"alert-danger\"], [3, \"hidden\"]],\n  template: function CadastrarTarefaComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"link\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\", 3);\n      i0.ɵɵtext(4, \"Cadastrar Tarefas\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(5, \"br\");\n      i0.ɵɵelementStart(6, \"form\", null, 4)(8, \"div\", 2)(9, \"div\", 5)(10, \"div\", 6)(11, \"div\", 7)(12, \"div\", 8)(13, \"textarea\", 9, 10);\n      i0.ɵɵlistener(\"ngModelChange\", function CadastrarTarefaComponent_Template_textarea_ngModelChange_13_listener($event) {\n        return ctx.tarefa.nome = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(15, CadastrarTarefaComponent_div_15_Template, 5, 2, \"div\", 11);\n      i0.ɵɵelementStart(16, \"ul\", 12)(17, \"li\", 13);\n      i0.ɵɵelement(18, \"i\", 14);\n      i0.ɵɵelementStart(19, \"input\", 15);\n      i0.ɵɵlistener(\"click\", function CadastrarTarefaComponent_Template_input_click_19_listener() {\n        return ctx.cadastrar();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(20, \"\\u00A0\\u00A0 \");\n      i0.ɵɵelementStart(21, \"button\", 16)(22, \"span\", 17);\n      i0.ɵɵtext(23, \" Voltar \");\n      i0.ɵɵelementEnd()()()()()()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(7);\n      const _r1 = i0.ɵɵreference(14);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngModel\", ctx.tarefa.nome);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r1.errors && (_r1.dirty || _r1.touched));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", !_r0.form.valid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(4, _c1));\n    }\n  },\n  dependencies: [i3.NgIf, i2.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.MinLengthValidator, i4.NgModel, i4.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\", \".lead[_ngcontent-%COMP%] { font-size: 33px;margin-bottom:0px; }\"]\n});","map":{"version":3,"names":["Tarefa","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","_r1","errors","CadastrarTarefaComponent","constructor","tarefaService","router","tarefa","ngOnInit","cadastrar","formTarefa","form","valid","console","log","navigate","ɵɵdirectiveInject","i1","TarefaService","i2","Router","selectors","viewQuery","CadastrarTarefaComponent_Query","rf","ctx","ɵɵelement","ɵɵlistener","CadastrarTarefaComponent_Template_textarea_ngModelChange_13_listener","$event","nome","ɵɵtemplate","CadastrarTarefaComponent_div_15_Template","CadastrarTarefaComponent_Template_input_click_19_listener","dirty","touched","_r0","ɵɵpureFunction0","_c1"],"sources":["C:\\Users\\acebe\\Documents\\Git\\angular13\\projeto-final\\src\\app\\tarefas\\cadastrar\\cadastrar-tarefa.component.ts","C:\\Users\\acebe\\Documents\\Git\\angular13\\projeto-final\\src\\app\\tarefas\\cadastrar\\cadastrar-tarefa.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { TarefaService,Tarefa } from '../shared';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-cadastrar-tarefa',\n  templateUrl: './cadastrar-tarefa.component.html',\n  styleUrls: ['./cadastrar-tarefa.component.css']\n})\nexport class CadastrarTarefaComponent implements OnInit{\n\n  @ViewChild('formTarefa')\n  formTarefa!: NgForm;\n  tarefa: Tarefa = new Tarefa();\n\n  constructor(\n    private tarefaService: TarefaService,\n    private router: Router\n  ){}\n\n  ngOnInit(): void {\n  }\n\n  cadastrar(): void{\n    if(this.formTarefa.form.valid){\n      console.log(\"entrou aqui\");\n      this.tarefaService.cadastrar(this.tarefa);\n      this.router.navigate([\"/tarefas\"]);\n    }\n  }\n\n}\n","<!-- <h1>Cadastrar Tarefa</h1>\n\n<div class=\"well\">\n  <form #formTarefa=\"ngForm\">\n    <div class=\"form-group\">\n      <label for=\"nome\">Tarefa:</label>\n      <input type=\"text\" class=\"form-controll\" id=\"nome\" name=\"nome\"\n      [(ngModel)]=\"tarefa.nome\" #nome=\"ngModel\"\n      minlength=\"5\" required>\n      <div *ngIf=\"nome.errors && (nome.dirty || nome.touched)\" class=\"alert alert-danger\">\n        <div [hidden]=\"!nome.errors['required']\">\n          Digite a Tarefa.\n        </div>\n        <div [hidden]=\"!nome.errors['minlength']\">\n          A tarefa deve conter ao menos 5 caracteres.\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group text-center\">\n      <input type=\"submit\" class=\"btn btn-success\"\n      (click)=\"cadastrar()\"\n      value=\"Cadastrar\"\n      [disabled]=\"!formTarefa.form.valid\"/>\n      <a [routerLink]=\"['/tarefas']\" class=\"btn btn-defoult\">\n        <span class=\"glyphicon glyphicon-chevron-left\" aria-hidden=\"true\">\n          Voltar\n        </span>\n      </a>\n    </div>\n  </form>\n</div> -->\n\n<link href=\"//netdna.bootstrapcdn.com/bootstrap/3.1.0/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//netdna.bootstrapcdn.com/bootstrap/3.1.0/js/bootstrap.min.js\"></script>\n<script src=\"//code.jquery.com/jquery-1.11.1.min.js\"></script>\n\n<style>\n  .lead { font-size: 33px;margin-bottom:0px; }\n</style>\n\n<div class=\"container\">\n  <div class=\"row\">\n    <h2 class=\"col-md-9\" style=\"margin-left: 30px;\">Cadastrar Tarefas</h2>\n  </div>\n  <br>\n  <form #formTarefa=\"ngForm\">\n    <div class=\"row\">\n        <div class=\"col-md-4\">\n          <div class=\"panel panel-info\">\n              <div class=\"panel-body text-center\">\n                <div class=\"\" >\n                  <textarea type=\"text\" class=\"col-md-12\" style=\"height: 200px;text-align: justify;\" id=\"nome\" name=\"nome\"\n                  [(ngModel)]=\"tarefa.nome\" #nome=\"ngModel\" minlength=\"5\" required ></textarea>\n                </div>\n              </div>\n              <div *ngIf=\"nome.errors && (nome.dirty || nome.touched)\" class=\"alert alert-danger\">\n                <div [hidden]=\"!nome.errors['required']\">\n                  Digite a Tarefa.\n                </div>\n                <div [hidden]=\"!nome.errors['minlength']\">\n                  A tarefa deve conter ao menos 5 caracteres.\n                </div>\n              </div>\n              <ul class=\"list-group list-group-flush text-center\">\n                  <li class=\"list-group-item\"><i class=\"icon-ok text-danger\"></i>\n                      <input type=\"submit\" class=\"btn btn-success\"\n                      (click)=\"cadastrar()\"\n                      value=\"Cadastrar\"\n                      [disabled]=\"!formTarefa.form.valid\" />&nbsp;&nbsp;\n                      <button [routerLink]=\"['/tarefas']\" class=\"btn btn-defoult\">\n                        <span class=\"glyphicon glyphicon-chevron-left\" aria-hidden=\"true\">\n                          Voltar\n                        </span>\n                      </button>\n                  </li>\n              </ul>\n          </div>\n      </div>\n    </div>\n  </form>\n</div>\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}